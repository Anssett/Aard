<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, October 13, 2019, 7:51 AM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "AardPokerAnalyzer" generated by Plugin Wizard -->

<muclient>
<plugin
   name="AardPokerAnalyzer"
   author="Algaru"
   id="868e53e4b0d17887c68e0f62"
   language="Lua"
   purpose="Analyze the cards you have and help figure out what to turn in!"
   date_written="2019-10-13 07:45:18"
   requires="5.06"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Use this plugin to help build a library of your poker cards and decide what hands to turn in.

Commands:
* card bag <bag name/id> - Set the id of the bag that contains your cards
* card inventory - Generate a report of the cards that you currently have
* card report - Generate a report that shows which hands you currently have 
* card turnin <optional bag id> - Generates a card report, removes all the relevant cards from the bag they are currently in, and optionally puts them in a new bag for easy turnin. 
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Plugin help  -->

<triggers>
  <trigger
   enabled="y"
   match="^Done building card report.$"
   omit_from_output="y"
   regexp="y"
   name="done_searching"
   script="done_searching"
   sequence="100"
  >
  </trigger>
  
  <trigger
   enabled="n"
   match="^(\(\s?\d+\)\s)?\s*(\(K\)\s?)?(\(M\)|\(Magic\)\s?)?(\(G\)|\(Glow\)\s?)?(\(H\)|\(Hum\)\s?)?\s?\|[\w\d]{1}\[([\w]+) of ([\w]+)\][\w\d]{1}\| \(1\)$"
   omit_from_output="n"
   regexp="y"
   name="found_card"
   script="found_card"
   sequence="100"
  >
  </trigger>
</triggers>


<aliases>
  <alias
   script="OnHelp"
   match="AardPokerAnalyzer:help"
   enabled="y"
  >
  </alias>
  <alias
    match="^card[s]?[ ]+help[ ]*$"
    regexp="y"
    enabled="y"
    sequence="101"
    script="OnHelp"
    >
  </alias>
  <alias
    match="^card[s]?[ ]+bag[ ]+(.*)$"
    regexp="y"
    enabled="y"
    sequence="101"
    script="card_bag"
    >
  </alias>
  <alias
    match="^card[s]?[ ]+bag[ ]*$"
    regexp="y"
    enabled="y"
    sequence="101"
    script="card_bag"
    >
  </alias>

  <alias
    match="^card[s]?[ ]+inve?n?t?o?r?y?[ ]*$"
    regexp="y"
    enabled="y"
    sequence="101"
    script="card_inventory"
    >
  </alias>
</aliases>

<script>
<![CDATA[

bag = GetVariable("bag") or ""

card_values = 
    {   ["Two"] = 2, ["Three"] = 3, ["Four"] = 4, ["Five"] = 5,
        ["Six"] = 6, ["Seven"] = 7, ["Eight"] = 8, ["Nine"] = 9,
        ["Ten"] = 10, ["Mephit"] = 11, ["Demon"] = 12, 
        ["Elemental"] = 13, ["Ace"] = 14
    }

card_order = 
     {   "Two", "Three", "Four", "Five", "Six",
         "Seven", "Eight", "Nine", "Ten", "Mephit",
         "Demon", "Elemental", "Ace"
     }

suits = { "Air", "Earth", "Fire", "Water" }  
  
     
collection = { ["Air"] = {}, ["Earth"] = {}, ["Fire"] = {}, ["Water"] = {} }
 


function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end


function card_bag(name, line, args)
    if args[1] then
        bag = args[1]
        SetVariable("bag", bag)
        SaveState()
        Note("Set card bag to " .. bag)
    else
        if (bag == nil)
        then
            Note("Card bag is unset!")
        else
            Note("Current card bag is " .. bag)
        end
    end
end


function card_inventory(name, line, args)
    collection = { ["Air"] = {}, ["Earth"] = {}, ["Fire"] = {}, ["Water"] = {} }
    EnableTrigger("found_card", true)
    EnableTrigger("done_searching", true)
    Send("invsort level " .. bag)
    
    SendNoEcho("echo @YDone building card report.")
end


function done_searching()
    EnableTrigger("found_card", false)
    EnableTrigger("done_searching", false)  
    
    print_inventory()
end


function found_card(name, line, args)
    cardcount = args[1]
    value = args[6]
    suit  = args[7]
    
    if cardcount == "" then
        cardcount = 1
    else
        cardcount = string.sub(cardcount, string.find(cardcount, "%d+"))
    end
        
    if (collection[suit][value] == nil) then
        collection[suit][value] = cardcount
    else
        collection[suit][value] = cardcount + collection[suit][value]
    end  
end


function print_inventory()
    ColourNote("magenta", "", "+----------------------------------------------------------------------+")
    ColourNote(
      "magenta",    "", "|   Card        |    ",
      "cyan",       "", "Air    ",
      "magenta",    "", "|    ",
      "#808000",    "", "Earth    ",
      "magenta",    "", "|     ",
      "red",        "", "Fire     ",
      "magenta",    "", "|    ",
      "#008080",    "", "Water    ",
      "magenta",    "", "|")

    ColourNote("magenta", "", "+----------------------------------------------------------------------+")


    for _, value in ipairs(card_order) do
        acount = string.format("     %-6d", get_card_count("Air", value))
        ecount = string.format("      %-7d", get_card_count("Earth", value))
        fcount = string.format("       %-7d", get_card_count("Fire", value))
        wcount = string.format("      %-7d", get_card_count("Water", value))
        value = string.format("   %-12s", value)
   
        ColourNote(
            "magenta",  "", "|",
            "white",    "", value,
            "magenta",  "", "|",
            "white",    "", acount,
            "magenta",  "", "|",
            "white",    "", ecount,
            "magenta",  "", "|",
            "white",    "", fcount,
            "magenta",  "", "|",
            "white",    "", wcount,
            "magenta",  "", "|")
    end
    
    ColourNote("magenta", "", "+----------------------------------------------------------------------+")
end

function get_card_count(suit, value)
    count = collection[suit][value]
    if count == nil then
        count = 0
    end
    return count
end


]]>

</script> 

</muclient>
