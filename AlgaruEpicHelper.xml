<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, February 27, 2022, 10:40 AM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "AlgaruEpicHelper" generated by Plugin Wizard -->

<muclient>
<plugin
   name="AlgaruEpicHelper"
   author="Algaru"
   id="b08c4d2f84f48c165793269a"
   language="Lua"
   purpose="Helpers for various epics"
   date_written="2022-02-27 10:39:44"
   requires="5.07"
   version="1.0"
   >

</plugin>

<aliases>
    <alias match='titanweapons'  enabled = 'y' ignore_case = 'y' sequence = '100' send_to='10'>
        <send>241axe;261axe;241dag;261dag;get "negative201" aardbag;get thandcrist aardbag;get "shiny jagged obsidian" aardbag;
        </send>
    </alias>
    
    <alias match='^titan[ ]+(?<damtype>cold|holy|negative|magic|pierce|water|reset)[ ]*$'  
        enabled = 'y' 
        ignore_case = 'y' 
        sequence = '100' 
        send_to='12'
        regexp='y'
        script="titan_change_weapon">
    </alias>
    
    <alias match='^[ ]*axdir[ ]*$'  
        enabled = 'y' 
        ignore_case = 'y' 
        sequence = '100' 
        send_to='12'
        regexp='y'
        script="get_axaldra_direction">
    </alias>

    <alias match='^[ ]*axtime[ ]*$'  
        enabled = 'y' 
        ignore_case = 'y' 
        sequence = '100' 
        send_to='12'
        regexp='y'
        script="report_axaldra_timer">
    </alias>
    <alias match='^[ ]*atc[ ]*$'  
        enabled = 'y' 
        ignore_case = 'y' 
        sequence = '100' 
        send_to='12'
        regexp='y'
        script="axaldra_touch_crystal">
    </alias>
    <alias match='^[ ]*touch crystal[ ]*$'  
        enabled = 'y' 
        ignore_case = 'y' 
        sequence = '100' 
        send_to='12'
        regexp='y'
        script="axaldra_touch_crystal">
    </alias>
</aliases>

<triggers>
  <trigger
   enabled="y"
   match="^A powerful magical aura grows around Morgak, and some of the runes floating around him start to fly away from him!$"
   regexp="y"
   name="titan_morgak_rune"
   send_to="10"
   sequence="100"
  >
  <send>look;map</send>
  </trigger>

  <trigger
   enabled="y"
   match="^Axaldra, the Eternal One lifts off from her perch and flies (?<dir>.*).$"
   regexp="y"
   name="set_axaldra_direction"
   send_to="12"
   sequence="100"
   script="set_axaldra_direction"
  >
  </trigger>
  
  <trigger
   enabled="y"
   match="^You hear a faint whisper in your ear, warning you not to return for 20 minutes.$"
   regexp="y"
   name="end_blackclaw"
   send_to="12"
   sequence="100"
   script="end_blackclaw"
  >
  </trigger>  
  
</triggers>

<script>
<![CDATA[   
    local convenience_script_id = '3d0a536e1264c566c50247b8'
    
    function titan_change_weapon (name, line, args)
        damtype = args.damtype
        weapons = {
            cold = "1732931185",
            holy = "1618582979",
            negative = "2181818380",
            magic = "1732931135",
            pierce = "2629653856",
            water = "1618583075",
            reset = "2181818380"
        }
        spells = {
            cold = "purgatory",
            holy = "holy strike",
            negative = "heavenly balance",
            magic = "force bolt",
            pierce = "talon",
            water = "caustic rain",
            reset = "heavenly balance"
        }
        
        weapon = weapons[damtype]
        newspell = spells[damtype]
        Send("wear " .. weapon)
        
        if (GetPluginInfo(convenience_script_id, 17)) then
            CallPlugin( convenience_script_id, "set_cspell_helper", newspell) 
        else
            ColourNote("white", "", "Switch to using " , "red", "", newspell)
        end
    end
    
    function axaldra_touch_crystal ()
        Send("touch crystal")
        start_time = os.time()
        SetVariable("axaldra_start_time", start_time)
        SaveState()
    end
    
    
    function set_axaldra_direction (name, line, args)
        direction = args.dir
        SetVariable("axaldra_dir", direction)
        SaveState()
    end
    
    function get_axaldra_direction ()
        dir = GetVariable("axaldra_dir") 
        if (dir == nil or dir == "")
        then
            ColourNote("magenta", "", "You don't know where Axaldra is!")
        else
            ColourNote("magenta", "", "Axaldra is hovering to the " , "magenta", "", dir, "magenta", "", "!")
        end
    end
    
    function end_blackclaw()
        SetVariable("axaldra_dir", "")
        SaveState()
        AddTimer("axaldra_timer", 0, 20, 0, "", timer_flag.Enabled + timer_flag.OneShot + timer_flag.Replace, "end_timer")
        report_axaldra_runtime()
    end
    
    function end_timer()
       ColourNote("magenta", "", "You feel ready to challenge Axaldra again!") 
    end
    
    function report_axaldra_runtime()
        end_time = os.time()
        start_time = GetVariable("axaldra_start_time")
        if (start_time == nil or start_time == "" or start_time == 0)
        then
            ColourNote("magenta", "", "You have no idea how long that took!")
        else 
            ColourNote("magenta", "", "Your battle with Axaldra took " .. convert_time_to_string(end_time - start_time) .. "!")
        end

        SetVariable("axaldra_start_time", 0)
        SaveState()
    end
    
    function report_axaldra_timer()
        time_remaining = GetTimerInfo("axaldra_timer", 13)
        if (time_remaining == 0 or time_remaining == nil or time_remaining == "")
        then
            ColourNote("magenta", "", "You feel ready to challenge Axaldra again!") 
        else
            ColourNote("magenta", "", "You will be ready to challenge Axaldra again in ", 
            "magenta", "", convert_time_to_string(time_remaining), "magenta", "", "!") 
        end
    end
    
    function convert_time_to_string (input_time)
        minutes = math.floor(input_time / 60)
        seconds = math.floor(input_time % 60)
        
        formatted_time = ""
        
        if (minutes > 0) then
            formatted_time = minutes .. "m"
        end
        
        formatted_time = formatted_time .. seconds .. "s"
        
        return formatted_time
    end

]]>
</script>

</muclient>
